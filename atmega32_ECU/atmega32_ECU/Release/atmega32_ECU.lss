
atmega32_ECU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00000c58  00000cec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000083  00800086  00800086  00000d12  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d12  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d44  2**2
                  CONTENTS, READONLY
  5 .debug_info   000004e6  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004a3  00000000  00000000  00001266  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000116  00000000  00000000  00001709  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000196  00000000  00000000  0000181f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 82 03 	jmp	0x704	; 0x704 <__vector_1>
   8:	0c 94 ab 03 	jmp	0x756	; 0x756 <__vector_2>
   c:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__vector_6>
  1c:	0c 94 78 04 	jmp	0x8f0	; 0x8f0 <__vector_7>
  20:	0c 94 a1 04 	jmp	0x942	; 0x942 <__vector_8>
  24:	0c 94 ca 04 	jmp	0x994	; 0x994 <__vector_9>
  28:	0c 94 26 04 	jmp	0x84c	; 0x84c <__vector_10>
  2c:	0c 94 4f 04 	jmp	0x89e	; 0x89e <__vector_11>
  30:	0c 94 fd 03 	jmp	0x7fa	; 0x7fa <__vector_12>
  34:	0c 94 56 05 	jmp	0xaac	; 0xaac <__vector_13>
  38:	0c 94 a8 05 	jmp	0xb50	; 0xb50 <__vector_14>
  3c:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__vector_15>
  40:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e5       	ldi	r30, 0x58	; 88
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a6 e8       	ldi	r26, 0x86	; 134
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 30       	cpi	r26, 0x09	; 9
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <main>
  8a:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Smart_Home_instructionDone>:
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	ee ea       	ldi	r30, 0xAE	; 174
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	ca e9       	ldi	r28, 0x9A	; 154
  9c:	d0 e0       	ldi	r29, 0x00	; 0
  9e:	a6 e8       	ldi	r26, 0x86	; 134
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	11 92       	st	Z+, r1
  a4:	19 92       	st	Y+, r1
  a6:	1d 92       	st	X+, r1
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	e2 3c       	cpi	r30, 0xC2	; 194
  ac:	f8 07       	cpc	r31, r24
  ae:	c9 f7       	brne	.-14     	; 0xa2 <Smart_Home_instructionDone+0x10>
  b0:	df 91       	pop	r29
  b2:	cf 91       	pop	r28
  b4:	08 95       	ret

000000b6 <Smart_Home_Init>:
  b6:	0e 94 28 02 	call	0x450	; 0x450 <DIO_Init>
  ba:	0e 94 1c 05 	call	0xa38	; 0xa38 <UART_Init>
  be:	0e 94 96 01 	call	0x32c	; 0x32c <LCD_Init>
  c2:	78 94       	sei
  c4:	0e 94 4b 05 	call	0xa96	; 0xa96 <UART_RecieverEnable>
  c8:	0c 94 49 00 	jmp	0x92	; 0x92 <Smart_Home_instructionDone>

000000cc <Smart_Home_Run>:
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	8e ea       	ldi	r24, 0xAE	; 174
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 0f 06 	call	0xc1e	; 0xc1e <UART_recieveString_Asyncronous>
  d8:	ee ea       	ldi	r30, 0xAE	; 174
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	aa e9       	ldi	r26, 0x9A	; 154
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	21 91       	ld	r18, Z+
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	89 0f       	add	r24, r25
  e8:	22 23       	and	r18, r18
  ea:	39 f0       	breq	.+14     	; 0xfa <Smart_Home_Run+0x2e>
  ec:	20 32       	cpi	r18, 0x20	; 32
  ee:	29 f0       	breq	.+10     	; 0xfa <Smart_Home_Run+0x2e>
  f0:	92 31       	cpi	r25, 0x12	; 18
  f2:	19 f0       	breq	.+6      	; 0xfa <Smart_Home_Run+0x2e>
  f4:	2d 93       	st	X+, r18
  f6:	98 2f       	mov	r25, r24
  f8:	f4 cf       	rjmp	.-24     	; 0xe2 <Smart_Home_Run+0x16>
  fa:	e9 2f       	mov	r30, r25
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	e6 56       	subi	r30, 0x66	; 102
 100:	ff 4f       	sbci	r31, 0xFF	; 255
 102:	20 83       	st	Z, r18
 104:	e8 2f       	mov	r30, r24
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	e6 56       	subi	r30, 0x66	; 102
 10a:	ff 4f       	sbci	r31, 0xFF	; 255
 10c:	10 82       	st	Z, r1
 10e:	c6 e8       	ldi	r28, 0x86	; 134
 110:	d0 e0       	ldi	r29, 0x00	; 0
 112:	9c 5e       	subi	r25, 0xEC	; 236
 114:	de 01       	movw	r26, r28
 116:	e8 2f       	mov	r30, r24
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	e2 55       	subi	r30, 0x52	; 82
 11c:	ff 4f       	sbci	r31, 0xFF	; 255
 11e:	20 81       	ld	r18, Z
 120:	22 23       	and	r18, r18
 122:	29 f0       	breq	.+10     	; 0x12e <Smart_Home_Run+0x62>
 124:	89 17       	cp	r24, r25
 126:	19 f0       	breq	.+6      	; 0x12e <Smart_Home_Run+0x62>
 128:	2d 93       	st	X+, r18
 12a:	8f 5f       	subi	r24, 0xFF	; 255
 12c:	f4 cf       	rjmp	.-24     	; 0x116 <Smart_Home_Run+0x4a>
 12e:	40 e0       	ldi	r20, 0x00	; 0
 130:	84 2f       	mov	r24, r20
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	fc 01       	movw	r30, r24
 136:	e6 56       	subi	r30, 0x66	; 102
 138:	ff 4f       	sbci	r31, 0xFF	; 255
 13a:	20 81       	ld	r18, Z
 13c:	22 23       	and	r18, r18
 13e:	a1 f0       	breq	.+40     	; 0x168 <Smart_Home_Run+0x9c>
 140:	fc 01       	movw	r30, r24
 142:	ef 59       	subi	r30, 0x9F	; 159
 144:	ff 4f       	sbci	r31, 0xFF	; 255
 146:	80 81       	ld	r24, Z
 148:	82 17       	cp	r24, r18
 14a:	61 f0       	breq	.+24     	; 0x164 <Smart_Home_Run+0x98>
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	bc 01       	movw	r22, r24
 152:	60 52       	subi	r22, 0x20	; 32
 154:	71 09       	sbc	r23, r1
 156:	26 17       	cp	r18, r22
 158:	37 07       	cpc	r19, r23
 15a:	21 f0       	breq	.+8      	; 0x164 <Smart_Home_Run+0x98>
 15c:	80 96       	adiw	r24, 0x20	; 32
 15e:	28 17       	cp	r18, r24
 160:	39 07       	cpc	r19, r25
 162:	69 f5       	brne	.+90     	; 0x1be <Smart_Home_Run+0xf2>
 164:	4f 5f       	subi	r20, 0xFF	; 255
 166:	e4 cf       	rjmp	.-56     	; 0x130 <Smart_Home_Run+0x64>
 168:	fc 01       	movw	r30, r24
 16a:	ef 59       	subi	r30, 0x9F	; 159
 16c:	ff 4f       	sbci	r31, 0xFF	; 255
 16e:	30 81       	ld	r19, Z
 170:	31 11       	cpse	r19, r1
 172:	e6 cf       	rjmp	.-52     	; 0x140 <Smart_Home_Run+0x74>
 174:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__data_end>
 178:	88 23       	and	r24, r24
 17a:	61 f0       	breq	.+24     	; 0x194 <Smart_Home_Run+0xc8>
 17c:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <__data_end+0x1>
 180:	81 11       	cpse	r24, r1
 182:	08 c0       	rjmp	.+16     	; 0x194 <Smart_Home_Run+0xc8>
 184:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	21 f4       	brne	.+8      	; 0x194 <Smart_Home_Run+0xc8>
 18c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 190:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCD_Clear>
 194:	60 e0       	ldi	r22, 0x00	; 0
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	0e 94 db 01 	call	0x3b6	; 0x3b6 <LCD_GoTo>
 19c:	86 e8       	ldi	r24, 0x86	; 134
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 e7 01 	call	0x3ce	; 0x3ce <LCD_WriteString>
 1a4:	89 91       	ld	r24, Y+
 1a6:	8d 30       	cpi	r24, 0x0D	; 13
 1a8:	29 f0       	breq	.+10     	; 0x1b4 <Smart_Home_Run+0xe8>
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	ca 39       	cpi	r28, 0x9A	; 154
 1ae:	d8 07       	cpc	r29, r24
 1b0:	c9 f7       	brne	.-14     	; 0x1a4 <Smart_Home_Run+0xd8>
 1b2:	05 c0       	rjmp	.+10     	; 0x1be <Smart_Home_Run+0xf2>
 1b4:	0e 94 49 00 	call	0x92	; 0x92 <Smart_Home_instructionDone>
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <LCD_WriteCommand>:
 1c4:	cf 93       	push	r28
 1c6:	c8 2f       	mov	r28, r24
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 1d0:	c4 fb       	bst	r28, 4
 1d2:	66 27       	eor	r22, r22
 1d4:	60 f9       	bld	r22, 0
 1d6:	83 e0       	ldi	r24, 0x03	; 3
 1d8:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 1dc:	c5 fb       	bst	r28, 5
 1de:	66 27       	eor	r22, r22
 1e0:	60 f9       	bld	r22, 0
 1e2:	84 e0       	ldi	r24, 0x04	; 4
 1e4:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 1e8:	c6 fb       	bst	r28, 6
 1ea:	66 27       	eor	r22, r22
 1ec:	60 f9       	bld	r22, 0
 1ee:	85 e0       	ldi	r24, 0x05	; 5
 1f0:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 1f4:	6c 2f       	mov	r22, r28
 1f6:	66 1f       	adc	r22, r22
 1f8:	66 27       	eor	r22, r22
 1fa:	66 1f       	adc	r22, r22
 1fc:	86 e0       	ldi	r24, 0x06	; 6
 1fe:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 202:	61 e0       	ldi	r22, 0x01	; 1
 204:	82 e0       	ldi	r24, 0x02	; 2
 206:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 20a:	8f ec       	ldi	r24, 0xCF	; 207
 20c:	97 e0       	ldi	r25, 0x07	; 7
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <LCD_WriteCommand+0x4a>
 212:	00 c0       	rjmp	.+0      	; 0x214 <LCD_WriteCommand+0x50>
 214:	00 00       	nop
 216:	60 e0       	ldi	r22, 0x00	; 0
 218:	82 e0       	ldi	r24, 0x02	; 2
 21a:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 21e:	6c 2f       	mov	r22, r28
 220:	61 70       	andi	r22, 0x01	; 1
 222:	83 e0       	ldi	r24, 0x03	; 3
 224:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 228:	c1 fb       	bst	r28, 1
 22a:	66 27       	eor	r22, r22
 22c:	60 f9       	bld	r22, 0
 22e:	84 e0       	ldi	r24, 0x04	; 4
 230:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 234:	c2 fb       	bst	r28, 2
 236:	66 27       	eor	r22, r22
 238:	60 f9       	bld	r22, 0
 23a:	85 e0       	ldi	r24, 0x05	; 5
 23c:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 240:	c3 fb       	bst	r28, 3
 242:	66 27       	eor	r22, r22
 244:	60 f9       	bld	r22, 0
 246:	86 e0       	ldi	r24, 0x06	; 6
 248:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 24c:	61 e0       	ldi	r22, 0x01	; 1
 24e:	82 e0       	ldi	r24, 0x02	; 2
 250:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 254:	8f ec       	ldi	r24, 0xCF	; 207
 256:	97 e0       	ldi	r25, 0x07	; 7
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <LCD_WriteCommand+0x94>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <LCD_WriteCommand+0x9a>
 25e:	00 00       	nop
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 268:	8f ec       	ldi	r24, 0xCF	; 207
 26a:	97 e0       	ldi	r25, 0x07	; 7
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <LCD_WriteCommand+0xa8>
 270:	00 c0       	rjmp	.+0      	; 0x272 <LCD_WriteCommand+0xae>
 272:	00 00       	nop
 274:	cf 91       	pop	r28
 276:	08 95       	ret

00000278 <LCD_WriteData>:
 278:	cf 93       	push	r28
 27a:	c8 2f       	mov	r28, r24
 27c:	61 e0       	ldi	r22, 0x01	; 1
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 284:	c4 fb       	bst	r28, 4
 286:	66 27       	eor	r22, r22
 288:	60 f9       	bld	r22, 0
 28a:	83 e0       	ldi	r24, 0x03	; 3
 28c:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 290:	c5 fb       	bst	r28, 5
 292:	66 27       	eor	r22, r22
 294:	60 f9       	bld	r22, 0
 296:	84 e0       	ldi	r24, 0x04	; 4
 298:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 29c:	c6 fb       	bst	r28, 6
 29e:	66 27       	eor	r22, r22
 2a0:	60 f9       	bld	r22, 0
 2a2:	85 e0       	ldi	r24, 0x05	; 5
 2a4:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 2a8:	6c 2f       	mov	r22, r28
 2aa:	66 1f       	adc	r22, r22
 2ac:	66 27       	eor	r22, r22
 2ae:	66 1f       	adc	r22, r22
 2b0:	86 e0       	ldi	r24, 0x06	; 6
 2b2:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 2b6:	61 e0       	ldi	r22, 0x01	; 1
 2b8:	82 e0       	ldi	r24, 0x02	; 2
 2ba:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 2be:	8f ec       	ldi	r24, 0xCF	; 207
 2c0:	97 e0       	ldi	r25, 0x07	; 7
 2c2:	01 97       	sbiw	r24, 0x01	; 1
 2c4:	f1 f7       	brne	.-4      	; 0x2c2 <LCD_WriteData+0x4a>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <LCD_WriteData+0x50>
 2c8:	00 00       	nop
 2ca:	60 e0       	ldi	r22, 0x00	; 0
 2cc:	82 e0       	ldi	r24, 0x02	; 2
 2ce:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 2d2:	6c 2f       	mov	r22, r28
 2d4:	61 70       	andi	r22, 0x01	; 1
 2d6:	83 e0       	ldi	r24, 0x03	; 3
 2d8:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 2dc:	c1 fb       	bst	r28, 1
 2de:	66 27       	eor	r22, r22
 2e0:	60 f9       	bld	r22, 0
 2e2:	84 e0       	ldi	r24, 0x04	; 4
 2e4:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 2e8:	c2 fb       	bst	r28, 2
 2ea:	66 27       	eor	r22, r22
 2ec:	60 f9       	bld	r22, 0
 2ee:	85 e0       	ldi	r24, 0x05	; 5
 2f0:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 2f4:	c3 fb       	bst	r28, 3
 2f6:	66 27       	eor	r22, r22
 2f8:	60 f9       	bld	r22, 0
 2fa:	86 e0       	ldi	r24, 0x06	; 6
 2fc:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 300:	61 e0       	ldi	r22, 0x01	; 1
 302:	82 e0       	ldi	r24, 0x02	; 2
 304:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 308:	8f ec       	ldi	r24, 0xCF	; 207
 30a:	97 e0       	ldi	r25, 0x07	; 7
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <LCD_WriteData+0x94>
 310:	00 c0       	rjmp	.+0      	; 0x312 <LCD_WriteData+0x9a>
 312:	00 00       	nop
 314:	60 e0       	ldi	r22, 0x00	; 0
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 31c:	8f ec       	ldi	r24, 0xCF	; 207
 31e:	97 e0       	ldi	r25, 0x07	; 7
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	f1 f7       	brne	.-4      	; 0x320 <LCD_WriteData+0xa8>
 324:	00 c0       	rjmp	.+0      	; 0x326 <LCD_WriteData+0xae>
 326:	00 00       	nop
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <LCD_Init>:
 32c:	2f e7       	ldi	r18, 0x7F	; 127
 32e:	88 e3       	ldi	r24, 0x38	; 56
 330:	91 e0       	ldi	r25, 0x01	; 1
 332:	21 50       	subi	r18, 0x01	; 1
 334:	80 40       	sbci	r24, 0x00	; 0
 336:	90 40       	sbci	r25, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <LCD_Init+0x6>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <LCD_Init+0x10>
 33c:	00 00       	nop
 33e:	82 e2       	ldi	r24, 0x22	; 34
 340:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_WriteCommand>
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	85 e0       	ldi	r24, 0x05	; 5
 350:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 354:	61 e0       	ldi	r22, 0x01	; 1
 356:	86 e0       	ldi	r24, 0x06	; 6
 358:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 35c:	61 e0       	ldi	r22, 0x01	; 1
 35e:	82 e0       	ldi	r24, 0x02	; 2
 360:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 364:	8f ec       	ldi	r24, 0xCF	; 207
 366:	97 e0       	ldi	r25, 0x07	; 7
 368:	01 97       	sbiw	r24, 0x01	; 1
 36a:	f1 f7       	brne	.-4      	; 0x368 <LCD_Init+0x3c>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <LCD_Init+0x42>
 36e:	00 00       	nop
 370:	60 e0       	ldi	r22, 0x00	; 0
 372:	82 e0       	ldi	r24, 0x02	; 2
 374:	0e 94 07 03 	call	0x60e	; 0x60e <DIO_WritePin>
 378:	8f ec       	ldi	r24, 0xCF	; 207
 37a:	97 e0       	ldi	r25, 0x07	; 7
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <LCD_Init+0x50>
 380:	00 c0       	rjmp	.+0      	; 0x382 <LCD_Init+0x56>
 382:	00 00       	nop
 384:	8c e0       	ldi	r24, 0x0C	; 12
 386:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_WriteCommand>
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_WriteCommand>
 390:	8f ec       	ldi	r24, 0xCF	; 207
 392:	97 e0       	ldi	r25, 0x07	; 7
 394:	01 97       	sbiw	r24, 0x01	; 1
 396:	f1 f7       	brne	.-4      	; 0x394 <LCD_Init+0x68>
 398:	00 c0       	rjmp	.+0      	; 0x39a <LCD_Init+0x6e>
 39a:	00 00       	nop
 39c:	86 e0       	ldi	r24, 0x06	; 6
 39e:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <LCD_WriteCommand>

000003a2 <LCD_Clear>:
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_WriteCommand>
 3a8:	8f ec       	ldi	r24, 0xCF	; 207
 3aa:	97 e0       	ldi	r25, 0x07	; 7
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <LCD_Clear+0xa>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <LCD_Clear+0x10>
 3b2:	00 00       	nop
 3b4:	08 95       	ret

000003b6 <LCD_GoTo>:
 3b6:	81 11       	cpse	r24, r1
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <LCD_GoTo+0x8>
 3ba:	86 2f       	mov	r24, r22
 3bc:	04 c0       	rjmp	.+8      	; 0x3c6 <LCD_GoTo+0x10>
 3be:	81 30       	cpi	r24, 0x01	; 1
 3c0:	29 f4       	brne	.+10     	; 0x3cc <LCD_GoTo+0x16>
 3c2:	80 e4       	ldi	r24, 0x40	; 64
 3c4:	86 0f       	add	r24, r22
 3c6:	80 68       	ori	r24, 0x80	; 128
 3c8:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <LCD_WriteCommand>
 3cc:	08 95       	ret

000003ce <LCD_WriteString>:
 3ce:	0f 93       	push	r16
 3d0:	1f 93       	push	r17
 3d2:	cf 93       	push	r28
 3d4:	8c 01       	movw	r16, r24
 3d6:	c0 e0       	ldi	r28, 0x00	; 0
 3d8:	f8 01       	movw	r30, r16
 3da:	ec 0f       	add	r30, r28
 3dc:	f1 1d       	adc	r31, r1
 3de:	80 81       	ld	r24, Z
 3e0:	88 23       	and	r24, r24
 3e2:	21 f0       	breq	.+8      	; 0x3ec <LCD_WriteString+0x1e>
 3e4:	0e 94 3c 01 	call	0x278	; 0x278 <LCD_WriteData>
 3e8:	cf 5f       	subi	r28, 0xFF	; 255
 3ea:	f6 cf       	rjmp	.-20     	; 0x3d8 <LCD_WriteString+0xa>
 3ec:	cf 91       	pop	r28
 3ee:	1f 91       	pop	r17
 3f0:	0f 91       	pop	r16
 3f2:	08 95       	ret

000003f4 <main>:
 3f4:	0e 94 5b 00 	call	0xb6	; 0xb6 <Smart_Home_Init>
 3f8:	0e 94 66 00 	call	0xcc	; 0xcc <Smart_Home_Run>
 3fc:	fd cf       	rjmp	.-6      	; 0x3f8 <main+0x4>

000003fe <__vector_16>:
 3fe:	1f 92       	push	r1
 400:	0f 92       	push	r0
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	0f 92       	push	r0
 406:	11 24       	eor	r1, r1
 408:	2f 93       	push	r18
 40a:	3f 93       	push	r19
 40c:	4f 93       	push	r20
 40e:	5f 93       	push	r21
 410:	6f 93       	push	r22
 412:	7f 93       	push	r23
 414:	8f 93       	push	r24
 416:	9f 93       	push	r25
 418:	af 93       	push	r26
 41a:	bf 93       	push	r27
 41c:	ef 93       	push	r30
 41e:	ff 93       	push	r31
 420:	e0 91 c2 00 	lds	r30, 0x00C2	; 0x8000c2 <funcptr>
 424:	f0 91 c3 00 	lds	r31, 0x00C3	; 0x8000c3 <funcptr+0x1>
 428:	30 97       	sbiw	r30, 0x00	; 0
 42a:	09 f0       	breq	.+2      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 42c:	09 95       	icall
 42e:	ff 91       	pop	r31
 430:	ef 91       	pop	r30
 432:	bf 91       	pop	r27
 434:	af 91       	pop	r26
 436:	9f 91       	pop	r25
 438:	8f 91       	pop	r24
 43a:	7f 91       	pop	r23
 43c:	6f 91       	pop	r22
 43e:	5f 91       	pop	r21
 440:	4f 91       	pop	r20
 442:	3f 91       	pop	r19
 444:	2f 91       	pop	r18
 446:	0f 90       	pop	r0
 448:	0f be       	out	0x3f, r0	; 63
 44a:	0f 90       	pop	r0
 44c:	1f 90       	pop	r1
 44e:	18 95       	reti

00000450 <DIO_Init>:
 450:	cf 93       	push	r28
 452:	df 93       	push	r29
 454:	e5 e6       	ldi	r30, 0x65	; 101
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	20 ef       	ldi	r18, 0xF0	; 240
 45a:	a8 ee       	ldi	r26, 0xE8	; 232
 45c:	38 ef       	ldi	r19, 0xF8	; 248
 45e:	40 e0       	ldi	r20, 0x00	; 0
 460:	50 e0       	ldi	r21, 0x00	; 0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	71 91       	ld	r23, Z+
 468:	71 11       	cpse	r23, r1
 46a:	3c c0       	rjmp	.+120    	; 0x4e4 <DIO_Init+0x94>
 46c:	48 30       	cpi	r20, 0x08	; 8
 46e:	78 f4       	brcc	.+30     	; 0x48e <DIO_Init+0x3e>
 470:	ba b3       	in	r27, 0x1a	; 26
 472:	ec 01       	movw	r28, r24
 474:	04 2e       	mov	r0, r20
 476:	02 c0       	rjmp	.+4      	; 0x47c <DIO_Init+0x2c>
 478:	cc 0f       	add	r28, r28
 47a:	dd 1f       	adc	r29, r29
 47c:	0a 94       	dec	r0
 47e:	e2 f7       	brpl	.-8      	; 0x478 <DIO_Init+0x28>
 480:	be 01       	movw	r22, r28
 482:	7b 2f       	mov	r23, r27
 484:	76 2b       	or	r23, r22
 486:	7a bb       	out	0x1a, r23	; 26
 488:	7b b3       	in	r23, 0x1b	; 27
 48a:	60 95       	com	r22
 48c:	3e c0       	rjmp	.+124    	; 0x50a <DIO_Init+0xba>
 48e:	38 30       	cpi	r19, 0x08	; 8
 490:	68 f4       	brcc	.+26     	; 0x4ac <DIO_Init+0x5c>
 492:	b7 b3       	in	r27, 0x17	; 23
 494:	bc 01       	movw	r22, r24
 496:	03 2e       	mov	r0, r19
 498:	01 c0       	rjmp	.+2      	; 0x49c <DIO_Init+0x4c>
 49a:	66 0f       	add	r22, r22
 49c:	0a 94       	dec	r0
 49e:	ea f7       	brpl	.-6      	; 0x49a <DIO_Init+0x4a>
 4a0:	7b 2f       	mov	r23, r27
 4a2:	76 2b       	or	r23, r22
 4a4:	77 bb       	out	0x17, r23	; 23
 4a6:	78 b3       	in	r23, 0x18	; 24
 4a8:	60 95       	com	r22
 4aa:	3f c0       	rjmp	.+126    	; 0x52a <DIO_Init+0xda>
 4ac:	28 30       	cpi	r18, 0x08	; 8
 4ae:	68 f4       	brcc	.+26     	; 0x4ca <DIO_Init+0x7a>
 4b0:	b4 b3       	in	r27, 0x14	; 20
 4b2:	bc 01       	movw	r22, r24
 4b4:	02 2e       	mov	r0, r18
 4b6:	01 c0       	rjmp	.+2      	; 0x4ba <DIO_Init+0x6a>
 4b8:	66 0f       	add	r22, r22
 4ba:	0a 94       	dec	r0
 4bc:	ea f7       	brpl	.-6      	; 0x4b8 <DIO_Init+0x68>
 4be:	7b 2f       	mov	r23, r27
 4c0:	76 2b       	or	r23, r22
 4c2:	74 bb       	out	0x14, r23	; 20
 4c4:	75 b3       	in	r23, 0x15	; 21
 4c6:	60 95       	com	r22
 4c8:	40 c0       	rjmp	.+128    	; 0x54a <DIO_Init+0xfa>
 4ca:	b1 b3       	in	r27, 0x11	; 17
 4cc:	bc 01       	movw	r22, r24
 4ce:	0a 2e       	mov	r0, r26
 4d0:	01 c0       	rjmp	.+2      	; 0x4d4 <DIO_Init+0x84>
 4d2:	66 0f       	add	r22, r22
 4d4:	0a 94       	dec	r0
 4d6:	ea f7       	brpl	.-6      	; 0x4d2 <DIO_Init+0x82>
 4d8:	7b 2f       	mov	r23, r27
 4da:	76 2b       	or	r23, r22
 4dc:	71 bb       	out	0x11, r23	; 17
 4de:	72 b3       	in	r23, 0x12	; 18
 4e0:	60 95       	com	r22
 4e2:	41 c0       	rjmp	.+130    	; 0x566 <DIO_Init+0x116>
 4e4:	71 30       	cpi	r23, 0x01	; 1
 4e6:	09 f0       	breq	.+2      	; 0x4ea <DIO_Init+0x9a>
 4e8:	40 c0       	rjmp	.+128    	; 0x56a <DIO_Init+0x11a>
 4ea:	48 30       	cpi	r20, 0x08	; 8
 4ec:	80 f4       	brcc	.+32     	; 0x50e <DIO_Init+0xbe>
 4ee:	ba b3       	in	r27, 0x1a	; 26
 4f0:	ec 01       	movw	r28, r24
 4f2:	04 2e       	mov	r0, r20
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <DIO_Init+0xaa>
 4f6:	cc 0f       	add	r28, r28
 4f8:	dd 1f       	adc	r29, r29
 4fa:	0a 94       	dec	r0
 4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <DIO_Init+0xa6>
 4fe:	be 01       	movw	r22, r28
 500:	60 95       	com	r22
 502:	7b 2f       	mov	r23, r27
 504:	76 23       	and	r23, r22
 506:	7a bb       	out	0x1a, r23	; 26
 508:	7b b3       	in	r23, 0x1b	; 27
 50a:	67 23       	and	r22, r23
 50c:	42 c0       	rjmp	.+132    	; 0x592 <DIO_Init+0x142>
 50e:	38 30       	cpi	r19, 0x08	; 8
 510:	70 f4       	brcc	.+28     	; 0x52e <DIO_Init+0xde>
 512:	b7 b3       	in	r27, 0x17	; 23
 514:	bc 01       	movw	r22, r24
 516:	03 2e       	mov	r0, r19
 518:	01 c0       	rjmp	.+2      	; 0x51c <DIO_Init+0xcc>
 51a:	66 0f       	add	r22, r22
 51c:	0a 94       	dec	r0
 51e:	ea f7       	brpl	.-6      	; 0x51a <DIO_Init+0xca>
 520:	60 95       	com	r22
 522:	7b 2f       	mov	r23, r27
 524:	76 23       	and	r23, r22
 526:	77 bb       	out	0x17, r23	; 23
 528:	78 b3       	in	r23, 0x18	; 24
 52a:	67 23       	and	r22, r23
 52c:	43 c0       	rjmp	.+134    	; 0x5b4 <DIO_Init+0x164>
 52e:	28 30       	cpi	r18, 0x08	; 8
 530:	70 f4       	brcc	.+28     	; 0x54e <DIO_Init+0xfe>
 532:	b4 b3       	in	r27, 0x14	; 20
 534:	bc 01       	movw	r22, r24
 536:	02 2e       	mov	r0, r18
 538:	01 c0       	rjmp	.+2      	; 0x53c <DIO_Init+0xec>
 53a:	66 0f       	add	r22, r22
 53c:	0a 94       	dec	r0
 53e:	ea f7       	brpl	.-6      	; 0x53a <DIO_Init+0xea>
 540:	60 95       	com	r22
 542:	7b 2f       	mov	r23, r27
 544:	76 23       	and	r23, r22
 546:	74 bb       	out	0x14, r23	; 20
 548:	75 b3       	in	r23, 0x15	; 21
 54a:	67 23       	and	r22, r23
 54c:	44 c0       	rjmp	.+136    	; 0x5d6 <DIO_Init+0x186>
 54e:	b1 b3       	in	r27, 0x11	; 17
 550:	bc 01       	movw	r22, r24
 552:	0a 2e       	mov	r0, r26
 554:	01 c0       	rjmp	.+2      	; 0x558 <DIO_Init+0x108>
 556:	66 0f       	add	r22, r22
 558:	0a 94       	dec	r0
 55a:	ea f7       	brpl	.-6      	; 0x556 <DIO_Init+0x106>
 55c:	60 95       	com	r22
 55e:	7b 2f       	mov	r23, r27
 560:	76 23       	and	r23, r22
 562:	71 bb       	out	0x11, r23	; 17
 564:	72 b3       	in	r23, 0x12	; 18
 566:	67 23       	and	r22, r23
 568:	45 c0       	rjmp	.+138    	; 0x5f4 <DIO_Init+0x1a4>
 56a:	72 30       	cpi	r23, 0x02	; 2
 56c:	09 f0       	breq	.+2      	; 0x570 <DIO_Init+0x120>
 56e:	43 c0       	rjmp	.+134    	; 0x5f6 <DIO_Init+0x1a6>
 570:	48 30       	cpi	r20, 0x08	; 8
 572:	88 f4       	brcc	.+34     	; 0x596 <DIO_Init+0x146>
 574:	ba b3       	in	r27, 0x1a	; 26
 576:	ec 01       	movw	r28, r24
 578:	04 2e       	mov	r0, r20
 57a:	02 c0       	rjmp	.+4      	; 0x580 <DIO_Init+0x130>
 57c:	cc 0f       	add	r28, r28
 57e:	dd 1f       	adc	r29, r29
 580:	0a 94       	dec	r0
 582:	e2 f7       	brpl	.-8      	; 0x57c <DIO_Init+0x12c>
 584:	be 01       	movw	r22, r28
 586:	7c 2f       	mov	r23, r28
 588:	70 95       	com	r23
 58a:	7b 23       	and	r23, r27
 58c:	7a bb       	out	0x1a, r23	; 26
 58e:	7b b3       	in	r23, 0x1b	; 27
 590:	67 2b       	or	r22, r23
 592:	6b bb       	out	0x1b, r22	; 27
 594:	30 c0       	rjmp	.+96     	; 0x5f6 <DIO_Init+0x1a6>
 596:	38 30       	cpi	r19, 0x08	; 8
 598:	78 f4       	brcc	.+30     	; 0x5b8 <DIO_Init+0x168>
 59a:	b7 b3       	in	r27, 0x17	; 23
 59c:	bc 01       	movw	r22, r24
 59e:	03 2e       	mov	r0, r19
 5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <DIO_Init+0x154>
 5a2:	66 0f       	add	r22, r22
 5a4:	0a 94       	dec	r0
 5a6:	ea f7       	brpl	.-6      	; 0x5a2 <DIO_Init+0x152>
 5a8:	76 2f       	mov	r23, r22
 5aa:	70 95       	com	r23
 5ac:	7b 23       	and	r23, r27
 5ae:	77 bb       	out	0x17, r23	; 23
 5b0:	78 b3       	in	r23, 0x18	; 24
 5b2:	67 2b       	or	r22, r23
 5b4:	68 bb       	out	0x18, r22	; 24
 5b6:	1f c0       	rjmp	.+62     	; 0x5f6 <DIO_Init+0x1a6>
 5b8:	28 30       	cpi	r18, 0x08	; 8
 5ba:	78 f4       	brcc	.+30     	; 0x5da <DIO_Init+0x18a>
 5bc:	b4 b3       	in	r27, 0x14	; 20
 5be:	bc 01       	movw	r22, r24
 5c0:	02 2e       	mov	r0, r18
 5c2:	01 c0       	rjmp	.+2      	; 0x5c6 <DIO_Init+0x176>
 5c4:	66 0f       	add	r22, r22
 5c6:	0a 94       	dec	r0
 5c8:	ea f7       	brpl	.-6      	; 0x5c4 <DIO_Init+0x174>
 5ca:	76 2f       	mov	r23, r22
 5cc:	70 95       	com	r23
 5ce:	7b 23       	and	r23, r27
 5d0:	74 bb       	out	0x14, r23	; 20
 5d2:	75 b3       	in	r23, 0x15	; 21
 5d4:	67 2b       	or	r22, r23
 5d6:	65 bb       	out	0x15, r22	; 21
 5d8:	0e c0       	rjmp	.+28     	; 0x5f6 <DIO_Init+0x1a6>
 5da:	b1 b3       	in	r27, 0x11	; 17
 5dc:	bc 01       	movw	r22, r24
 5de:	0a 2e       	mov	r0, r26
 5e0:	01 c0       	rjmp	.+2      	; 0x5e4 <DIO_Init+0x194>
 5e2:	66 0f       	add	r22, r22
 5e4:	0a 94       	dec	r0
 5e6:	ea f7       	brpl	.-6      	; 0x5e2 <DIO_Init+0x192>
 5e8:	76 2f       	mov	r23, r22
 5ea:	70 95       	com	r23
 5ec:	7b 23       	and	r23, r27
 5ee:	71 bb       	out	0x11, r23	; 17
 5f0:	72 b3       	in	r23, 0x12	; 18
 5f2:	67 2b       	or	r22, r23
 5f4:	62 bb       	out	0x12, r22	; 18
 5f6:	4f 5f       	subi	r20, 0xFF	; 255
 5f8:	5f 4f       	sbci	r21, 0xFF	; 255
 5fa:	3f 5f       	subi	r19, 0xFF	; 255
 5fc:	af 5f       	subi	r26, 0xFF	; 255
 5fe:	2f 5f       	subi	r18, 0xFF	; 255
 600:	40 32       	cpi	r20, 0x20	; 32
 602:	51 05       	cpc	r21, r1
 604:	09 f0       	breq	.+2      	; 0x608 <DIO_Init+0x1b8>
 606:	2f cf       	rjmp	.-418    	; 0x466 <DIO_Init+0x16>
 608:	df 91       	pop	r29
 60a:	cf 91       	pop	r28
 60c:	08 95       	ret

0000060e <DIO_WritePin>:
 60e:	61 11       	cpse	r22, r1
 610:	3c c0       	rjmp	.+120    	; 0x68a <DIO_WritePin+0x7c>
 612:	88 30       	cpi	r24, 0x08	; 8
 614:	68 f4       	brcc	.+26     	; 0x630 <DIO_WritePin+0x22>
 616:	4b b3       	in	r20, 0x1b	; 27
 618:	21 e0       	ldi	r18, 0x01	; 1
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	b9 01       	movw	r22, r18
 61e:	02 c0       	rjmp	.+4      	; 0x624 <DIO_WritePin+0x16>
 620:	66 0f       	add	r22, r22
 622:	77 1f       	adc	r23, r23
 624:	8a 95       	dec	r24
 626:	e2 f7       	brpl	.-8      	; 0x620 <DIO_WritePin+0x12>
 628:	cb 01       	movw	r24, r22
 62a:	80 95       	com	r24
 62c:	84 23       	and	r24, r20
 62e:	3c c0       	rjmp	.+120    	; 0x6a8 <DIO_WritePin+0x9a>
 630:	38 ef       	ldi	r19, 0xF8	; 248
 632:	38 0f       	add	r19, r24
 634:	38 30       	cpi	r19, 0x08	; 8
 636:	50 f4       	brcc	.+20     	; 0x64c <DIO_WritePin+0x3e>
 638:	28 b3       	in	r18, 0x18	; 24
 63a:	81 e0       	ldi	r24, 0x01	; 1
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	01 c0       	rjmp	.+2      	; 0x642 <DIO_WritePin+0x34>
 640:	88 0f       	add	r24, r24
 642:	3a 95       	dec	r19
 644:	ea f7       	brpl	.-6      	; 0x640 <DIO_WritePin+0x32>
 646:	80 95       	com	r24
 648:	82 23       	and	r24, r18
 64a:	3c c0       	rjmp	.+120    	; 0x6c4 <DIO_WritePin+0xb6>
 64c:	30 ef       	ldi	r19, 0xF0	; 240
 64e:	38 0f       	add	r19, r24
 650:	38 30       	cpi	r19, 0x08	; 8
 652:	50 f4       	brcc	.+20     	; 0x668 <DIO_WritePin+0x5a>
 654:	25 b3       	in	r18, 0x15	; 21
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	01 c0       	rjmp	.+2      	; 0x65e <DIO_WritePin+0x50>
 65c:	88 0f       	add	r24, r24
 65e:	3a 95       	dec	r19
 660:	ea f7       	brpl	.-6      	; 0x65c <DIO_WritePin+0x4e>
 662:	80 95       	com	r24
 664:	82 23       	and	r24, r18
 666:	3c c0       	rjmp	.+120    	; 0x6e0 <DIO_WritePin+0xd2>
 668:	88 51       	subi	r24, 0x18	; 24
 66a:	88 30       	cpi	r24, 0x08	; 8
 66c:	08 f0       	brcs	.+2      	; 0x670 <DIO_WritePin+0x62>
 66e:	49 c0       	rjmp	.+146    	; 0x702 <DIO_WritePin+0xf4>
 670:	42 b3       	in	r20, 0x12	; 18
 672:	21 e0       	ldi	r18, 0x01	; 1
 674:	30 e0       	ldi	r19, 0x00	; 0
 676:	b9 01       	movw	r22, r18
 678:	02 c0       	rjmp	.+4      	; 0x67e <DIO_WritePin+0x70>
 67a:	66 0f       	add	r22, r22
 67c:	77 1f       	adc	r23, r23
 67e:	8a 95       	dec	r24
 680:	e2 f7       	brpl	.-8      	; 0x67a <DIO_WritePin+0x6c>
 682:	cb 01       	movw	r24, r22
 684:	80 95       	com	r24
 686:	84 23       	and	r24, r20
 688:	3b c0       	rjmp	.+118    	; 0x700 <DIO_WritePin+0xf2>
 68a:	61 30       	cpi	r22, 0x01	; 1
 68c:	d1 f5       	brne	.+116    	; 0x702 <DIO_WritePin+0xf4>
 68e:	88 30       	cpi	r24, 0x08	; 8
 690:	68 f4       	brcc	.+26     	; 0x6ac <DIO_WritePin+0x9e>
 692:	4b b3       	in	r20, 0x1b	; 27
 694:	21 e0       	ldi	r18, 0x01	; 1
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	b9 01       	movw	r22, r18
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <DIO_WritePin+0x92>
 69c:	66 0f       	add	r22, r22
 69e:	77 1f       	adc	r23, r23
 6a0:	8a 95       	dec	r24
 6a2:	e2 f7       	brpl	.-8      	; 0x69c <DIO_WritePin+0x8e>
 6a4:	cb 01       	movw	r24, r22
 6a6:	84 2b       	or	r24, r20
 6a8:	8b bb       	out	0x1b, r24	; 27
 6aa:	08 95       	ret
 6ac:	28 ef       	ldi	r18, 0xF8	; 248
 6ae:	28 0f       	add	r18, r24
 6b0:	28 30       	cpi	r18, 0x08	; 8
 6b2:	50 f4       	brcc	.+20     	; 0x6c8 <DIO_WritePin+0xba>
 6b4:	38 b3       	in	r19, 0x18	; 24
 6b6:	81 e0       	ldi	r24, 0x01	; 1
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	01 c0       	rjmp	.+2      	; 0x6be <DIO_WritePin+0xb0>
 6bc:	88 0f       	add	r24, r24
 6be:	2a 95       	dec	r18
 6c0:	ea f7       	brpl	.-6      	; 0x6bc <DIO_WritePin+0xae>
 6c2:	83 2b       	or	r24, r19
 6c4:	88 bb       	out	0x18, r24	; 24
 6c6:	08 95       	ret
 6c8:	20 ef       	ldi	r18, 0xF0	; 240
 6ca:	28 0f       	add	r18, r24
 6cc:	28 30       	cpi	r18, 0x08	; 8
 6ce:	50 f4       	brcc	.+20     	; 0x6e4 <DIO_WritePin+0xd6>
 6d0:	35 b3       	in	r19, 0x15	; 21
 6d2:	81 e0       	ldi	r24, 0x01	; 1
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <DIO_WritePin+0xcc>
 6d8:	88 0f       	add	r24, r24
 6da:	2a 95       	dec	r18
 6dc:	ea f7       	brpl	.-6      	; 0x6d8 <DIO_WritePin+0xca>
 6de:	83 2b       	or	r24, r19
 6e0:	85 bb       	out	0x15, r24	; 21
 6e2:	08 95       	ret
 6e4:	88 51       	subi	r24, 0x18	; 24
 6e6:	88 30       	cpi	r24, 0x08	; 8
 6e8:	60 f4       	brcc	.+24     	; 0x702 <DIO_WritePin+0xf4>
 6ea:	42 b3       	in	r20, 0x12	; 18
 6ec:	21 e0       	ldi	r18, 0x01	; 1
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	b9 01       	movw	r22, r18
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <DIO_WritePin+0xea>
 6f4:	66 0f       	add	r22, r22
 6f6:	77 1f       	adc	r23, r23
 6f8:	8a 95       	dec	r24
 6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <DIO_WritePin+0xe6>
 6fc:	cb 01       	movw	r24, r22
 6fe:	84 2b       	or	r24, r20
 700:	82 bb       	out	0x12, r24	; 18
 702:	08 95       	ret

00000704 <__vector_1>:
 704:	1f 92       	push	r1
 706:	0f 92       	push	r0
 708:	0f b6       	in	r0, 0x3f	; 63
 70a:	0f 92       	push	r0
 70c:	11 24       	eor	r1, r1
 70e:	2f 93       	push	r18
 710:	3f 93       	push	r19
 712:	4f 93       	push	r20
 714:	5f 93       	push	r21
 716:	6f 93       	push	r22
 718:	7f 93       	push	r23
 71a:	8f 93       	push	r24
 71c:	9f 93       	push	r25
 71e:	af 93       	push	r26
 720:	bf 93       	push	r27
 722:	ef 93       	push	r30
 724:	ff 93       	push	r31
 726:	e0 91 c8 00 	lds	r30, 0x00C8	; 0x8000c8 <FUNC_PTR0>
 72a:	f0 91 c9 00 	lds	r31, 0x00C9	; 0x8000c9 <FUNC_PTR0+0x1>
 72e:	30 97       	sbiw	r30, 0x00	; 0
 730:	09 f0       	breq	.+2      	; 0x734 <__vector_1+0x30>
 732:	09 95       	icall
 734:	ff 91       	pop	r31
 736:	ef 91       	pop	r30
 738:	bf 91       	pop	r27
 73a:	af 91       	pop	r26
 73c:	9f 91       	pop	r25
 73e:	8f 91       	pop	r24
 740:	7f 91       	pop	r23
 742:	6f 91       	pop	r22
 744:	5f 91       	pop	r21
 746:	4f 91       	pop	r20
 748:	3f 91       	pop	r19
 74a:	2f 91       	pop	r18
 74c:	0f 90       	pop	r0
 74e:	0f be       	out	0x3f, r0	; 63
 750:	0f 90       	pop	r0
 752:	1f 90       	pop	r1
 754:	18 95       	reti

00000756 <__vector_2>:
 756:	1f 92       	push	r1
 758:	0f 92       	push	r0
 75a:	0f b6       	in	r0, 0x3f	; 63
 75c:	0f 92       	push	r0
 75e:	11 24       	eor	r1, r1
 760:	2f 93       	push	r18
 762:	3f 93       	push	r19
 764:	4f 93       	push	r20
 766:	5f 93       	push	r21
 768:	6f 93       	push	r22
 76a:	7f 93       	push	r23
 76c:	8f 93       	push	r24
 76e:	9f 93       	push	r25
 770:	af 93       	push	r26
 772:	bf 93       	push	r27
 774:	ef 93       	push	r30
 776:	ff 93       	push	r31
 778:	e0 91 c6 00 	lds	r30, 0x00C6	; 0x8000c6 <FUNC_PTR1>
 77c:	f0 91 c7 00 	lds	r31, 0x00C7	; 0x8000c7 <FUNC_PTR1+0x1>
 780:	30 97       	sbiw	r30, 0x00	; 0
 782:	09 f0       	breq	.+2      	; 0x786 <__vector_2+0x30>
 784:	09 95       	icall
 786:	ff 91       	pop	r31
 788:	ef 91       	pop	r30
 78a:	bf 91       	pop	r27
 78c:	af 91       	pop	r26
 78e:	9f 91       	pop	r25
 790:	8f 91       	pop	r24
 792:	7f 91       	pop	r23
 794:	6f 91       	pop	r22
 796:	5f 91       	pop	r21
 798:	4f 91       	pop	r20
 79a:	3f 91       	pop	r19
 79c:	2f 91       	pop	r18
 79e:	0f 90       	pop	r0
 7a0:	0f be       	out	0x3f, r0	; 63
 7a2:	0f 90       	pop	r0
 7a4:	1f 90       	pop	r1
 7a6:	18 95       	reti

000007a8 <__vector_3>:
 7a8:	1f 92       	push	r1
 7aa:	0f 92       	push	r0
 7ac:	0f b6       	in	r0, 0x3f	; 63
 7ae:	0f 92       	push	r0
 7b0:	11 24       	eor	r1, r1
 7b2:	2f 93       	push	r18
 7b4:	3f 93       	push	r19
 7b6:	4f 93       	push	r20
 7b8:	5f 93       	push	r21
 7ba:	6f 93       	push	r22
 7bc:	7f 93       	push	r23
 7be:	8f 93       	push	r24
 7c0:	9f 93       	push	r25
 7c2:	af 93       	push	r26
 7c4:	bf 93       	push	r27
 7c6:	ef 93       	push	r30
 7c8:	ff 93       	push	r31
 7ca:	e0 91 c4 00 	lds	r30, 0x00C4	; 0x8000c4 <FUNC_PTR2>
 7ce:	f0 91 c5 00 	lds	r31, 0x00C5	; 0x8000c5 <FUNC_PTR2+0x1>
 7d2:	30 97       	sbiw	r30, 0x00	; 0
 7d4:	09 f0       	breq	.+2      	; 0x7d8 <__vector_3+0x30>
 7d6:	09 95       	icall
 7d8:	ff 91       	pop	r31
 7da:	ef 91       	pop	r30
 7dc:	bf 91       	pop	r27
 7de:	af 91       	pop	r26
 7e0:	9f 91       	pop	r25
 7e2:	8f 91       	pop	r24
 7e4:	7f 91       	pop	r23
 7e6:	6f 91       	pop	r22
 7e8:	5f 91       	pop	r21
 7ea:	4f 91       	pop	r20
 7ec:	3f 91       	pop	r19
 7ee:	2f 91       	pop	r18
 7f0:	0f 90       	pop	r0
 7f2:	0f be       	out	0x3f, r0	; 63
 7f4:	0f 90       	pop	r0
 7f6:	1f 90       	pop	r1
 7f8:	18 95       	reti

000007fa <__vector_12>:
 7fa:	1f 92       	push	r1
 7fc:	0f 92       	push	r0
 7fe:	0f b6       	in	r0, 0x3f	; 63
 800:	0f 92       	push	r0
 802:	11 24       	eor	r1, r1
 804:	2f 93       	push	r18
 806:	3f 93       	push	r19
 808:	4f 93       	push	r20
 80a:	5f 93       	push	r21
 80c:	6f 93       	push	r22
 80e:	7f 93       	push	r23
 810:	8f 93       	push	r24
 812:	9f 93       	push	r25
 814:	af 93       	push	r26
 816:	bf 93       	push	r27
 818:	ef 93       	push	r30
 81a:	ff 93       	push	r31
 81c:	e0 91 ca 00 	lds	r30, 0x00CA	; 0x8000ca <SPI_INTERRUP_PTR>
 820:	f0 91 cb 00 	lds	r31, 0x00CB	; 0x8000cb <SPI_INTERRUP_PTR+0x1>
 824:	30 97       	sbiw	r30, 0x00	; 0
 826:	09 f0       	breq	.+2      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 828:	09 95       	icall
 82a:	ff 91       	pop	r31
 82c:	ef 91       	pop	r30
 82e:	bf 91       	pop	r27
 830:	af 91       	pop	r26
 832:	9f 91       	pop	r25
 834:	8f 91       	pop	r24
 836:	7f 91       	pop	r23
 838:	6f 91       	pop	r22
 83a:	5f 91       	pop	r21
 83c:	4f 91       	pop	r20
 83e:	3f 91       	pop	r19
 840:	2f 91       	pop	r18
 842:	0f 90       	pop	r0
 844:	0f be       	out	0x3f, r0	; 63
 846:	0f 90       	pop	r0
 848:	1f 90       	pop	r1
 84a:	18 95       	reti

0000084c <__vector_10>:
 84c:	1f 92       	push	r1
 84e:	0f 92       	push	r0
 850:	0f b6       	in	r0, 0x3f	; 63
 852:	0f 92       	push	r0
 854:	11 24       	eor	r1, r1
 856:	2f 93       	push	r18
 858:	3f 93       	push	r19
 85a:	4f 93       	push	r20
 85c:	5f 93       	push	r21
 85e:	6f 93       	push	r22
 860:	7f 93       	push	r23
 862:	8f 93       	push	r24
 864:	9f 93       	push	r25
 866:	af 93       	push	r26
 868:	bf 93       	push	r27
 86a:	ef 93       	push	r30
 86c:	ff 93       	push	r31
 86e:	e0 91 ce 00 	lds	r30, 0x00CE	; 0x8000ce <funcPtrCompareMatch>
 872:	f0 91 cf 00 	lds	r31, 0x00CF	; 0x8000cf <funcPtrCompareMatch+0x1>
 876:	30 97       	sbiw	r30, 0x00	; 0
 878:	09 f0       	breq	.+2      	; 0x87c <__stack+0x1d>
 87a:	09 95       	icall
 87c:	ff 91       	pop	r31
 87e:	ef 91       	pop	r30
 880:	bf 91       	pop	r27
 882:	af 91       	pop	r26
 884:	9f 91       	pop	r25
 886:	8f 91       	pop	r24
 888:	7f 91       	pop	r23
 88a:	6f 91       	pop	r22
 88c:	5f 91       	pop	r21
 88e:	4f 91       	pop	r20
 890:	3f 91       	pop	r19
 892:	2f 91       	pop	r18
 894:	0f 90       	pop	r0
 896:	0f be       	out	0x3f, r0	; 63
 898:	0f 90       	pop	r0
 89a:	1f 90       	pop	r1
 89c:	18 95       	reti

0000089e <__vector_11>:
 89e:	1f 92       	push	r1
 8a0:	0f 92       	push	r0
 8a2:	0f b6       	in	r0, 0x3f	; 63
 8a4:	0f 92       	push	r0
 8a6:	11 24       	eor	r1, r1
 8a8:	2f 93       	push	r18
 8aa:	3f 93       	push	r19
 8ac:	4f 93       	push	r20
 8ae:	5f 93       	push	r21
 8b0:	6f 93       	push	r22
 8b2:	7f 93       	push	r23
 8b4:	8f 93       	push	r24
 8b6:	9f 93       	push	r25
 8b8:	af 93       	push	r26
 8ba:	bf 93       	push	r27
 8bc:	ef 93       	push	r30
 8be:	ff 93       	push	r31
 8c0:	e0 91 cc 00 	lds	r30, 0x00CC	; 0x8000cc <funcPtrOverflow>
 8c4:	f0 91 cd 00 	lds	r31, 0x00CD	; 0x8000cd <funcPtrOverflow+0x1>
 8c8:	30 97       	sbiw	r30, 0x00	; 0
 8ca:	09 f0       	breq	.+2      	; 0x8ce <__vector_11+0x30>
 8cc:	09 95       	icall
 8ce:	ff 91       	pop	r31
 8d0:	ef 91       	pop	r30
 8d2:	bf 91       	pop	r27
 8d4:	af 91       	pop	r26
 8d6:	9f 91       	pop	r25
 8d8:	8f 91       	pop	r24
 8da:	7f 91       	pop	r23
 8dc:	6f 91       	pop	r22
 8de:	5f 91       	pop	r21
 8e0:	4f 91       	pop	r20
 8e2:	3f 91       	pop	r19
 8e4:	2f 91       	pop	r18
 8e6:	0f 90       	pop	r0
 8e8:	0f be       	out	0x3f, r0	; 63
 8ea:	0f 90       	pop	r0
 8ec:	1f 90       	pop	r1
 8ee:	18 95       	reti

000008f0 <__vector_7>:
 8f0:	1f 92       	push	r1
 8f2:	0f 92       	push	r0
 8f4:	0f b6       	in	r0, 0x3f	; 63
 8f6:	0f 92       	push	r0
 8f8:	11 24       	eor	r1, r1
 8fa:	2f 93       	push	r18
 8fc:	3f 93       	push	r19
 8fe:	4f 93       	push	r20
 900:	5f 93       	push	r21
 902:	6f 93       	push	r22
 904:	7f 93       	push	r23
 906:	8f 93       	push	r24
 908:	9f 93       	push	r25
 90a:	af 93       	push	r26
 90c:	bf 93       	push	r27
 90e:	ef 93       	push	r30
 910:	ff 93       	push	r31
 912:	e0 91 d6 00 	lds	r30, 0x00D6	; 0x8000d6 <funcPtrCompareMatch1A>
 916:	f0 91 d7 00 	lds	r31, 0x00D7	; 0x8000d7 <funcPtrCompareMatch1A+0x1>
 91a:	30 97       	sbiw	r30, 0x00	; 0
 91c:	09 f0       	breq	.+2      	; 0x920 <__vector_7+0x30>
 91e:	09 95       	icall
 920:	ff 91       	pop	r31
 922:	ef 91       	pop	r30
 924:	bf 91       	pop	r27
 926:	af 91       	pop	r26
 928:	9f 91       	pop	r25
 92a:	8f 91       	pop	r24
 92c:	7f 91       	pop	r23
 92e:	6f 91       	pop	r22
 930:	5f 91       	pop	r21
 932:	4f 91       	pop	r20
 934:	3f 91       	pop	r19
 936:	2f 91       	pop	r18
 938:	0f 90       	pop	r0
 93a:	0f be       	out	0x3f, r0	; 63
 93c:	0f 90       	pop	r0
 93e:	1f 90       	pop	r1
 940:	18 95       	reti

00000942 <__vector_8>:
 942:	1f 92       	push	r1
 944:	0f 92       	push	r0
 946:	0f b6       	in	r0, 0x3f	; 63
 948:	0f 92       	push	r0
 94a:	11 24       	eor	r1, r1
 94c:	2f 93       	push	r18
 94e:	3f 93       	push	r19
 950:	4f 93       	push	r20
 952:	5f 93       	push	r21
 954:	6f 93       	push	r22
 956:	7f 93       	push	r23
 958:	8f 93       	push	r24
 95a:	9f 93       	push	r25
 95c:	af 93       	push	r26
 95e:	bf 93       	push	r27
 960:	ef 93       	push	r30
 962:	ff 93       	push	r31
 964:	e0 91 d4 00 	lds	r30, 0x00D4	; 0x8000d4 <funcPtrCompareMatch1B>
 968:	f0 91 d5 00 	lds	r31, 0x00D5	; 0x8000d5 <funcPtrCompareMatch1B+0x1>
 96c:	30 97       	sbiw	r30, 0x00	; 0
 96e:	09 f0       	breq	.+2      	; 0x972 <__vector_8+0x30>
 970:	09 95       	icall
 972:	ff 91       	pop	r31
 974:	ef 91       	pop	r30
 976:	bf 91       	pop	r27
 978:	af 91       	pop	r26
 97a:	9f 91       	pop	r25
 97c:	8f 91       	pop	r24
 97e:	7f 91       	pop	r23
 980:	6f 91       	pop	r22
 982:	5f 91       	pop	r21
 984:	4f 91       	pop	r20
 986:	3f 91       	pop	r19
 988:	2f 91       	pop	r18
 98a:	0f 90       	pop	r0
 98c:	0f be       	out	0x3f, r0	; 63
 98e:	0f 90       	pop	r0
 990:	1f 90       	pop	r1
 992:	18 95       	reti

00000994 <__vector_9>:
 994:	1f 92       	push	r1
 996:	0f 92       	push	r0
 998:	0f b6       	in	r0, 0x3f	; 63
 99a:	0f 92       	push	r0
 99c:	11 24       	eor	r1, r1
 99e:	2f 93       	push	r18
 9a0:	3f 93       	push	r19
 9a2:	4f 93       	push	r20
 9a4:	5f 93       	push	r21
 9a6:	6f 93       	push	r22
 9a8:	7f 93       	push	r23
 9aa:	8f 93       	push	r24
 9ac:	9f 93       	push	r25
 9ae:	af 93       	push	r26
 9b0:	bf 93       	push	r27
 9b2:	ef 93       	push	r30
 9b4:	ff 93       	push	r31
 9b6:	e0 91 d2 00 	lds	r30, 0x00D2	; 0x8000d2 <funcPtrOverflow>
 9ba:	f0 91 d3 00 	lds	r31, 0x00D3	; 0x8000d3 <funcPtrOverflow+0x1>
 9be:	30 97       	sbiw	r30, 0x00	; 0
 9c0:	09 f0       	breq	.+2      	; 0x9c4 <__vector_9+0x30>
 9c2:	09 95       	icall
 9c4:	ff 91       	pop	r31
 9c6:	ef 91       	pop	r30
 9c8:	bf 91       	pop	r27
 9ca:	af 91       	pop	r26
 9cc:	9f 91       	pop	r25
 9ce:	8f 91       	pop	r24
 9d0:	7f 91       	pop	r23
 9d2:	6f 91       	pop	r22
 9d4:	5f 91       	pop	r21
 9d6:	4f 91       	pop	r20
 9d8:	3f 91       	pop	r19
 9da:	2f 91       	pop	r18
 9dc:	0f 90       	pop	r0
 9de:	0f be       	out	0x3f, r0	; 63
 9e0:	0f 90       	pop	r0
 9e2:	1f 90       	pop	r1
 9e4:	18 95       	reti

000009e6 <__vector_6>:
 9e6:	1f 92       	push	r1
 9e8:	0f 92       	push	r0
 9ea:	0f b6       	in	r0, 0x3f	; 63
 9ec:	0f 92       	push	r0
 9ee:	11 24       	eor	r1, r1
 9f0:	2f 93       	push	r18
 9f2:	3f 93       	push	r19
 9f4:	4f 93       	push	r20
 9f6:	5f 93       	push	r21
 9f8:	6f 93       	push	r22
 9fa:	7f 93       	push	r23
 9fc:	8f 93       	push	r24
 9fe:	9f 93       	push	r25
 a00:	af 93       	push	r26
 a02:	bf 93       	push	r27
 a04:	ef 93       	push	r30
 a06:	ff 93       	push	r31
 a08:	e0 91 d0 00 	lds	r30, 0x00D0	; 0x8000d0 <funcPtrTimeStamp>
 a0c:	f0 91 d1 00 	lds	r31, 0x00D1	; 0x8000d1 <funcPtrTimeStamp+0x1>
 a10:	30 97       	sbiw	r30, 0x00	; 0
 a12:	09 f0       	breq	.+2      	; 0xa16 <__vector_6+0x30>
 a14:	09 95       	icall
 a16:	ff 91       	pop	r31
 a18:	ef 91       	pop	r30
 a1a:	bf 91       	pop	r27
 a1c:	af 91       	pop	r26
 a1e:	9f 91       	pop	r25
 a20:	8f 91       	pop	r24
 a22:	7f 91       	pop	r23
 a24:	6f 91       	pop	r22
 a26:	5f 91       	pop	r21
 a28:	4f 91       	pop	r20
 a2a:	3f 91       	pop	r19
 a2c:	2f 91       	pop	r18
 a2e:	0f 90       	pop	r0
 a30:	0f be       	out	0x3f, r0	; 63
 a32:	0f 90       	pop	r0
 a34:	1f 90       	pop	r1
 a36:	18 95       	reti

00000a38 <UART_Init>:
 a38:	80 b5       	in	r24, 0x20	; 32
 a3a:	80 68       	ori	r24, 0x80	; 128
 a3c:	80 bd       	out	0x20, r24	; 32
 a3e:	80 b5       	in	r24, 0x20	; 32
 a40:	8f 7b       	andi	r24, 0xBF	; 191
 a42:	80 bd       	out	0x20, r24	; 32
 a44:	59 98       	cbi	0x0b, 1	; 11
 a46:	80 b5       	in	r24, 0x20	; 32
 a48:	80 68       	ori	r24, 0x80	; 128
 a4a:	80 bd       	out	0x20, r24	; 32
 a4c:	80 b5       	in	r24, 0x20	; 32
 a4e:	8f 7d       	andi	r24, 0xDF	; 223
 a50:	80 bd       	out	0x20, r24	; 32
 a52:	80 b5       	in	r24, 0x20	; 32
 a54:	8f 7e       	andi	r24, 0xEF	; 239
 a56:	80 bd       	out	0x20, r24	; 32
 a58:	80 b5       	in	r24, 0x20	; 32
 a5a:	80 68       	ori	r24, 0x80	; 128
 a5c:	80 bd       	out	0x20, r24	; 32
 a5e:	80 b5       	in	r24, 0x20	; 32
 a60:	87 7f       	andi	r24, 0xF7	; 247
 a62:	80 bd       	out	0x20, r24	; 32
 a64:	80 b5       	in	r24, 0x20	; 32
 a66:	80 68       	ori	r24, 0x80	; 128
 a68:	80 bd       	out	0x20, r24	; 32
 a6a:	80 b5       	in	r24, 0x20	; 32
 a6c:	8b 7f       	andi	r24, 0xFB	; 251
 a6e:	80 bd       	out	0x20, r24	; 32
 a70:	80 b5       	in	r24, 0x20	; 32
 a72:	84 60       	ori	r24, 0x04	; 4
 a74:	80 bd       	out	0x20, r24	; 32
 a76:	80 b5       	in	r24, 0x20	; 32
 a78:	82 60       	ori	r24, 0x02	; 2
 a7a:	80 bd       	out	0x20, r24	; 32
 a7c:	80 b5       	in	r24, 0x20	; 32
 a7e:	80 68       	ori	r24, 0x80	; 128
 a80:	80 bd       	out	0x20, r24	; 32
 a82:	80 b5       	in	r24, 0x20	; 32
 a84:	8e 7f       	andi	r24, 0xFE	; 254
 a86:	80 bd       	out	0x20, r24	; 32
 a88:	83 e3       	ldi	r24, 0x33	; 51
 a8a:	89 b9       	out	0x09, r24	; 9
 a8c:	80 b5       	in	r24, 0x20	; 32
 a8e:	8f 77       	andi	r24, 0x7F	; 127
 a90:	80 bd       	out	0x20, r24	; 32
 a92:	10 bc       	out	0x20, r1	; 32
 a94:	08 95       	ret

00000a96 <UART_RecieverEnable>:
 a96:	54 9a       	sbi	0x0a, 4	; 10
 a98:	08 95       	ret

00000a9a <UART_Recieve>:
 a9a:	8c b1       	in	r24, 0x0c	; 12
 a9c:	08 95       	ret

00000a9e <UART_RXcomplateInterruptEnable>:
 a9e:	57 9a       	sbi	0x0a, 7	; 10
 aa0:	08 95       	ret

00000aa2 <UART_RXcomplateInterruptSetFunction>:
 aa2:	90 93 dd 00 	sts	0x00DD, r25	; 0x8000dd <RXcomplateInterruptPTR+0x1>
 aa6:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <RXcomplateInterruptPTR>
 aaa:	08 95       	ret

00000aac <__vector_13>:
 aac:	1f 92       	push	r1
 aae:	0f 92       	push	r0
 ab0:	0f b6       	in	r0, 0x3f	; 63
 ab2:	0f 92       	push	r0
 ab4:	11 24       	eor	r1, r1
 ab6:	2f 93       	push	r18
 ab8:	3f 93       	push	r19
 aba:	4f 93       	push	r20
 abc:	5f 93       	push	r21
 abe:	6f 93       	push	r22
 ac0:	7f 93       	push	r23
 ac2:	8f 93       	push	r24
 ac4:	9f 93       	push	r25
 ac6:	af 93       	push	r26
 ac8:	bf 93       	push	r27
 aca:	ef 93       	push	r30
 acc:	ff 93       	push	r31
 ace:	e0 91 dc 00 	lds	r30, 0x00DC	; 0x8000dc <RXcomplateInterruptPTR>
 ad2:	f0 91 dd 00 	lds	r31, 0x00DD	; 0x8000dd <RXcomplateInterruptPTR+0x1>
 ad6:	30 97       	sbiw	r30, 0x00	; 0
 ad8:	09 f0       	breq	.+2      	; 0xadc <__vector_13+0x30>
 ada:	09 95       	icall
 adc:	ff 91       	pop	r31
 ade:	ef 91       	pop	r30
 ae0:	bf 91       	pop	r27
 ae2:	af 91       	pop	r26
 ae4:	9f 91       	pop	r25
 ae6:	8f 91       	pop	r24
 ae8:	7f 91       	pop	r23
 aea:	6f 91       	pop	r22
 aec:	5f 91       	pop	r21
 aee:	4f 91       	pop	r20
 af0:	3f 91       	pop	r19
 af2:	2f 91       	pop	r18
 af4:	0f 90       	pop	r0
 af6:	0f be       	out	0x3f, r0	; 63
 af8:	0f 90       	pop	r0
 afa:	1f 90       	pop	r1
 afc:	18 95       	reti

00000afe <__vector_15>:
 afe:	1f 92       	push	r1
 b00:	0f 92       	push	r0
 b02:	0f b6       	in	r0, 0x3f	; 63
 b04:	0f 92       	push	r0
 b06:	11 24       	eor	r1, r1
 b08:	2f 93       	push	r18
 b0a:	3f 93       	push	r19
 b0c:	4f 93       	push	r20
 b0e:	5f 93       	push	r21
 b10:	6f 93       	push	r22
 b12:	7f 93       	push	r23
 b14:	8f 93       	push	r24
 b16:	9f 93       	push	r25
 b18:	af 93       	push	r26
 b1a:	bf 93       	push	r27
 b1c:	ef 93       	push	r30
 b1e:	ff 93       	push	r31
 b20:	e0 91 da 00 	lds	r30, 0x00DA	; 0x8000da <TXcomplateInterruptPTR>
 b24:	f0 91 db 00 	lds	r31, 0x00DB	; 0x8000db <TXcomplateInterruptPTR+0x1>
 b28:	30 97       	sbiw	r30, 0x00	; 0
 b2a:	09 f0       	breq	.+2      	; 0xb2e <__vector_15+0x30>
 b2c:	09 95       	icall
 b2e:	ff 91       	pop	r31
 b30:	ef 91       	pop	r30
 b32:	bf 91       	pop	r27
 b34:	af 91       	pop	r26
 b36:	9f 91       	pop	r25
 b38:	8f 91       	pop	r24
 b3a:	7f 91       	pop	r23
 b3c:	6f 91       	pop	r22
 b3e:	5f 91       	pop	r21
 b40:	4f 91       	pop	r20
 b42:	3f 91       	pop	r19
 b44:	2f 91       	pop	r18
 b46:	0f 90       	pop	r0
 b48:	0f be       	out	0x3f, r0	; 63
 b4a:	0f 90       	pop	r0
 b4c:	1f 90       	pop	r1
 b4e:	18 95       	reti

00000b50 <__vector_14>:
 b50:	1f 92       	push	r1
 b52:	0f 92       	push	r0
 b54:	0f b6       	in	r0, 0x3f	; 63
 b56:	0f 92       	push	r0
 b58:	11 24       	eor	r1, r1
 b5a:	2f 93       	push	r18
 b5c:	3f 93       	push	r19
 b5e:	4f 93       	push	r20
 b60:	5f 93       	push	r21
 b62:	6f 93       	push	r22
 b64:	7f 93       	push	r23
 b66:	8f 93       	push	r24
 b68:	9f 93       	push	r25
 b6a:	af 93       	push	r26
 b6c:	bf 93       	push	r27
 b6e:	ef 93       	push	r30
 b70:	ff 93       	push	r31
 b72:	e0 91 d8 00 	lds	r30, 0x00D8	; 0x8000d8 <UDRemptyInterruptPTR>
 b76:	f0 91 d9 00 	lds	r31, 0x00D9	; 0x8000d9 <UDRemptyInterruptPTR+0x1>
 b7a:	30 97       	sbiw	r30, 0x00	; 0
 b7c:	09 f0       	breq	.+2      	; 0xb80 <__vector_14+0x30>
 b7e:	09 95       	icall
 b80:	ff 91       	pop	r31
 b82:	ef 91       	pop	r30
 b84:	bf 91       	pop	r27
 b86:	af 91       	pop	r26
 b88:	9f 91       	pop	r25
 b8a:	8f 91       	pop	r24
 b8c:	7f 91       	pop	r23
 b8e:	6f 91       	pop	r22
 b90:	5f 91       	pop	r21
 b92:	4f 91       	pop	r20
 b94:	3f 91       	pop	r19
 b96:	2f 91       	pop	r18
 b98:	0f 90       	pop	r0
 b9a:	0f be       	out	0x3f, r0	; 63
 b9c:	0f 90       	pop	r0
 b9e:	1f 90       	pop	r1
 ba0:	18 95       	reti

00000ba2 <recieveInterruptFunction>:
 ba2:	cf 93       	push	r28
 ba4:	df 93       	push	r29
 ba6:	e0 91 df 00 	lds	r30, 0x00DF	; 0x8000df <recieveDoneString>
 baa:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <recieveStringsArrayPointer>
 bae:	e8 17       	cp	r30, r24
 bb0:	78 f5       	brcc	.+94     	; 0xc10 <recieveInterruptFunction+0x6e>
 bb2:	f0 e0       	ldi	r31, 0x00	; 0
 bb4:	ee 0f       	add	r30, r30
 bb6:	ff 1f       	adc	r31, r31
 bb8:	ef 51       	subi	r30, 0x1F	; 31
 bba:	ff 4f       	sbci	r31, 0xFF	; 255
 bbc:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <recieveCharIndex>
 bc0:	c0 81       	ld	r28, Z
 bc2:	d1 81       	ldd	r29, Z+1	; 0x01
 bc4:	c8 0f       	add	r28, r24
 bc6:	d1 1d       	adc	r29, r1
 bc8:	0e 94 4d 05 	call	0xa9a	; 0xa9a <UART_Recieve>
 bcc:	88 83       	st	Y, r24
 bce:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <recieveDoneString>
 bd2:	e9 2f       	mov	r30, r25
 bd4:	f0 e0       	ldi	r31, 0x00	; 0
 bd6:	ee 0f       	add	r30, r30
 bd8:	ff 1f       	adc	r31, r31
 bda:	ef 51       	subi	r30, 0x1F	; 31
 bdc:	ff 4f       	sbci	r31, 0xFF	; 255
 bde:	20 81       	ld	r18, Z
 be0:	31 81       	ldd	r19, Z+1	; 0x01
 be2:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <recieveCharIndex>
 be6:	f9 01       	movw	r30, r18
 be8:	e8 0f       	add	r30, r24
 bea:	f1 1d       	adc	r31, r1
 bec:	40 81       	ld	r20, Z
 bee:	4d 30       	cpi	r20, 0x0D	; 13
 bf0:	41 f0       	breq	.+16     	; 0xc02 <recieveInterruptFunction+0x60>
 bf2:	8f 5f       	subi	r24, 0xFF	; 255
 bf4:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <recieveCharIndex>
 bf8:	f9 01       	movw	r30, r18
 bfa:	e8 0f       	add	r30, r24
 bfc:	f1 1d       	adc	r31, r1
 bfe:	10 82       	st	Z, r1
 c00:	0b c0       	rjmp	.+22     	; 0xc18 <recieveInterruptFunction+0x76>
 c02:	40 83       	st	Z, r20
 c04:	9f 5f       	subi	r25, 0xFF	; 255
 c06:	90 93 df 00 	sts	0x00DF, r25	; 0x8000df <recieveDoneString>
 c0a:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <recieveCharIndex>
 c0e:	04 c0       	rjmp	.+8      	; 0xc18 <recieveInterruptFunction+0x76>
 c10:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <recieveStringsArrayPointer>
 c14:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <recieveDoneString>
 c18:	df 91       	pop	r29
 c1a:	cf 91       	pop	r28
 c1c:	08 95       	ret

00000c1e <UART_recieveString_Asyncronous>:
 c1e:	cf 93       	push	r28
 c20:	df 93       	push	r29
 c22:	ec 01       	movw	r28, r24
 c24:	81 ed       	ldi	r24, 0xD1	; 209
 c26:	95 e0       	ldi	r25, 0x05	; 5
 c28:	0e 94 51 05 	call	0xaa2	; 0xaa2 <UART_RXcomplateInterruptSetFunction>
 c2c:	0e 94 4f 05 	call	0xa9e	; 0xa9e <UART_RXcomplateInterruptEnable>
 c30:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <recieveStringsArrayPointer>
 c34:	e8 2f       	mov	r30, r24
 c36:	f0 e0       	ldi	r31, 0x00	; 0
 c38:	ee 0f       	add	r30, r30
 c3a:	ff 1f       	adc	r31, r31
 c3c:	ef 51       	subi	r30, 0x1F	; 31
 c3e:	ff 4f       	sbci	r31, 0xFF	; 255
 c40:	d1 83       	std	Z+1, r29	; 0x01
 c42:	c0 83       	st	Z, r28
 c44:	84 31       	cpi	r24, 0x14	; 20
 c46:	18 f4       	brcc	.+6      	; 0xc4e <UART_recieveString_Asyncronous+0x30>
 c48:	8f 5f       	subi	r24, 0xFF	; 255
 c4a:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <recieveStringsArrayPointer>
 c4e:	df 91       	pop	r29
 c50:	cf 91       	pop	r28
 c52:	08 95       	ret

00000c54 <_exit>:
 c54:	f8 94       	cli

00000c56 <__stop_program>:
 c56:	ff cf       	rjmp	.-2      	; 0xc56 <__stop_program>
