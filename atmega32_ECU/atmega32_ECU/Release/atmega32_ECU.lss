
atmega32_ECU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000012c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000012c  000001a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001e0  2**2
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  00000702  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000116  00000000  00000000  00000ba5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000cbb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e2       	ldi	r30, 0x2C	; 44
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 37       	cpi	r26, 0x70	; 112
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 94 00 	jmp	0x128	; 0x128 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
  92:	0e 94 56 00 	call	0xac	; 0xac <SEGMENTS4_2_Init>
  96:	c0 e0       	ldi	r28, 0x00	; 0
  98:	d5 e6       	ldi	r29, 0x65	; 101
  9a:	8c 2f       	mov	r24, r28
  9c:	0e 94 5b 00 	call	0xb6	; 0xb6 <SEGMENTS4_2>
  a0:	d1 50       	subi	r29, 0x01	; 1
  a2:	d9 f7       	brne	.-10     	; 0x9a <main+0x8>
  a4:	cf 5f       	subi	r28, 0xFF	; 255
  a6:	c4 36       	cpi	r28, 0x64	; 100
  a8:	b9 f7       	brne	.-18     	; 0x98 <main+0x6>
  aa:	f5 cf       	rjmp	.-22     	; 0x96 <main+0x4>

000000ac <SEGMENTS4_2_Init>:
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	87 bb       	out	0x17, r24	; 23
  b0:	d6 9a       	sbi	0x1a, 6	; 26
  b2:	d7 9a       	sbi	0x1a, 7	; 26
  b4:	08 95       	ret

000000b6 <SEGMENTS4_2>:
  b6:	df 9a       	sbi	0x1b, 7	; 27
  b8:	de 98       	cbi	0x1b, 6	; 27
  ba:	84 36       	cpi	r24, 0x64	; 100
  bc:	c0 f4       	brcc	.+48     	; 0xee <SEGMENTS4_2+0x38>
  be:	6a e0       	ldi	r22, 0x0A	; 10
  c0:	0e 94 88 00 	call	0x110	; 0x110 <__udivmodqi4>
  c4:	e8 2f       	mov	r30, r24
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	e0 5a       	subi	r30, 0xA0	; 160
  ca:	ff 4f       	sbci	r31, 0xFF	; 255
  cc:	80 81       	ld	r24, Z
  ce:	88 bb       	out	0x18, r24	; 24
  d0:	ef ec       	ldi	r30, 0xCF	; 207
  d2:	f7 e0       	ldi	r31, 0x07	; 7
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <SEGMENTS4_2+0x1e>
  d8:	00 c0       	rjmp	.+0      	; 0xda <SEGMENTS4_2+0x24>
  da:	00 00       	nop
  dc:	de 9a       	sbi	0x1b, 6	; 27
  de:	df 98       	cbi	0x1b, 7	; 27
  e0:	e9 2f       	mov	r30, r25
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	e0 5a       	subi	r30, 0xA0	; 160
  e6:	ff 4f       	sbci	r31, 0xFF	; 255
  e8:	80 81       	ld	r24, Z
  ea:	88 bb       	out	0x18, r24	; 24
  ec:	0a c0       	rjmp	.+20     	; 0x102 <SEGMENTS4_2+0x4c>
  ee:	18 ba       	out	0x18, r1	; 24
  f0:	ef ec       	ldi	r30, 0xCF	; 207
  f2:	f7 e0       	ldi	r31, 0x07	; 7
  f4:	31 97       	sbiw	r30, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <SEGMENTS4_2+0x3e>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <SEGMENTS4_2+0x44>
  fa:	00 00       	nop
  fc:	de 9a       	sbi	0x1b, 6	; 27
  fe:	df 98       	cbi	0x1b, 7	; 27
 100:	18 ba       	out	0x18, r1	; 24
 102:	8f ec       	ldi	r24, 0xCF	; 207
 104:	97 e0       	ldi	r25, 0x07	; 7
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <SEGMENTS4_2+0x50>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <SEGMENTS4_2+0x56>
 10c:	00 00       	nop
 10e:	08 95       	ret

00000110 <__udivmodqi4>:
 110:	99 1b       	sub	r25, r25
 112:	79 e0       	ldi	r23, 0x09	; 9
 114:	04 c0       	rjmp	.+8      	; 0x11e <__udivmodqi4_ep>

00000116 <__udivmodqi4_loop>:
 116:	99 1f       	adc	r25, r25
 118:	96 17       	cp	r25, r22
 11a:	08 f0       	brcs	.+2      	; 0x11e <__udivmodqi4_ep>
 11c:	96 1b       	sub	r25, r22

0000011e <__udivmodqi4_ep>:
 11e:	88 1f       	adc	r24, r24
 120:	7a 95       	dec	r23
 122:	c9 f7       	brne	.-14     	; 0x116 <__udivmodqi4_loop>
 124:	80 95       	com	r24
 126:	08 95       	ret

00000128 <_exit>:
 128:	f8 94       	cli

0000012a <__stop_program>:
 12a:	ff cf       	rjmp	.-2      	; 0x12a <__stop_program>
